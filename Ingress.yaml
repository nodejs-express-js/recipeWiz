apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: recipe-app-ingress
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/spec.ingressClassName: "gce"  # Use "gce" for GKE Ingress
    kubernetes.io/ingress.global-static-ip-name: "recipe-app"
    networking.gke.io/managed-certificates: "recipe-app-cert"  # Link Managed Certificate
spec:
  rules:
    - host: recipeshare.vishalgandla.online  # Your domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-recipe-app  # Your service name
                port:
                  number: 80  # Adjust to match your service port
          - path: /backend
            pathType: Prefix
            backend:
              service:
                name: backend-recipe-app  # Your backend service name
                port:
                  number: 80  # Adjust to match your backend service port

  # rules:
  #   - host: recipeshare.vishalgandla.online  # Your domain
  #     http:
  #       paths:
  #         # This rule forwards any request that starts with /backend (e.g. /backend/anything) to the backend service.
  #         - path: /*
  #           pathType: ImplementationSpecific
  #           backend:
  #             service:
  #               name: backend-recipe-app  # Your backend service name
  #               port:
  #                 number: 80  # Adjust to match your backend service port
          # This rule catches all other paths and routes them to the frontend service.
          # - path: /
          #   pathType: ImplementationSpecific
          #   backend:
          #     service:
          #       name: frontend-recipe-app  # Your frontend service name
          #       port:
          #         number: 80  # Adjust to match your frontend service port
